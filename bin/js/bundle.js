var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.ash={})}(this,function(t){"use strict";class e{constructor(){this.previous=null,this.next=null,this.listener=null,this.once=!1}}class s{constructor(){this.tail=null,this.cacheTail=null}get(){if(this.tail){const t=this.tail;return this.tail=this.tail.previous,t.previous=null,t}return new e}dispose(t){t.listener=null,t.once=!1,t.next=null,t.previous=this.tail,this.tail=t}cache(t){t.listener=null,t.previous=this.cacheTail,this.cacheTail=t}releaseCache(){for(;this.cacheTail;){const t=this.cacheTail;this.cacheTail=t.previous,t.next=null,t.previous=this.tail,this.tail=t}}}class i{constructor(){this.head=null,this.tail=null,this.toAddHead=null,this.toAddTail=null,this.dispatching=!1,this.pNumListeners=0,this.nodes=new Map,this.listenerNodePool=new s}startDispatch(){this.dispatching=!0}endDispatch(){this.dispatching=!1,this.toAddHead&&(this.head?(this.tail.next=this.toAddHead,this.toAddHead.previous=this.tail,this.tail=this.toAddTail):(this.head=this.toAddHead,this.tail=this.toAddTail),this.toAddHead=null,this.toAddTail=null),this.listenerNodePool.releaseCache()}get numListeners(){return this.pNumListeners}add(t){if(this.nodes.has(t))return;const e=this.listenerNodePool.get();e.listener=t,this.nodes.set(t,e),this.addNode(e)}addOnce(t){if(this.nodes.has(t))return;const e=this.listenerNodePool.get();e.listener=t,e.once=!0,this.nodes.set(t,e),this.addNode(e)}addNode(t){this.dispatching?this.toAddHead?(this.toAddTail.next=t,t.previous=this.toAddTail,this.toAddTail=t):this.toAddHead=this.toAddTail=t:this.head?(this.tail.next=t,t.previous=this.tail,this.tail=t):this.head=this.tail=t,this.pNumListeners+=1}remove(t){const e=this.nodes.get(t)||null;e&&(this.head===e&&(this.head=this.head.next),this.tail===e&&(this.tail=this.tail.previous),this.toAddHead===e&&(this.toAddHead=this.toAddHead.next),this.toAddTail===e&&(this.toAddTail=this.toAddTail.previous),e.previous&&(e.previous.next=e.next),e.next&&(e.next.previous=e.previous),this.nodes.delete(t),this.dispatching?this.listenerNodePool.cache(e):this.listenerNodePool.dispose(e),this.pNumListeners-=1)}removeAll(){for(;this.head;){const t=this.head;this.head=this.head.next,this.nodes.delete(t.listener),this.listenerNodePool.dispose(t)}this.tail=null,this.toAddHead=null,this.toAddTail=null,this.pNumListeners=0}}class n extends i{dispatch(){let t;for(this.startDispatch(),t=this.head;t;t=t.next)t.listener.call(t),t.once&&this.remove(t.listener);this.endDispatch()}}class o extends i{dispatch(t){let e;for(this.startDispatch(),e=this.head;e;e=e.next)e.listener.call(e,t),e.once&&this.remove(e.listener);this.endDispatch()}}class h extends i{dispatch(t,e){let s;for(this.startDispatch(),s=this.head;s;s=s.next)s.listener.call(s,t,e),s.once&&this.remove(s.listener);this.endDispatch()}}class r{constructor(){this.head=null,this.tail=null,this.nodeAdded=new o,this.nodeRemoved=new o}add(t){this.head?(this.tail.next=t,t.previous=this.tail,t.next=null,this.tail=t):(this.head=this.tail=t,t.next=t.previous=null),this.nodeAdded.dispatch(t)}remove(t){this.head===t&&(this.head=this.head.next),this.tail===t&&(this.tail=this.tail.previous),t.previous&&(t.previous.next=t.next),t.next&&(t.next.previous=t.previous),this.nodeRemoved.dispatch(t)}removeAll(){for(;this.head;){const t=this.head;this.head=t.next,t.previous=null,t.next=null,this.nodeRemoved.dispatch(t)}this.tail=null}get empty(){return null==this.head}swap(t,e){if(t.previous===e)t.previous=e.previous,e.previous=t,e.next=t.next,t.next=e;else if(e.previous===t)e.previous=t.previous,t.previous=e,t.next=e.next,e.next=t;else{let s=t.previous;t.previous=e.previous,e.previous=s,s=t.next,t.next=e.next,e.next=s}this.head===t?this.head=e:this.head===e&&(this.head=t),this.tail===t?this.tail=e:this.tail===e&&(this.tail=t),t.previous&&(t.previous.next=t),e.previous&&(e.previous.next=e),t.next&&(t.next.previous=t),e.next&&(e.next.previous=e)}insertionSort(t){if(this.head===this.tail)return;let e=this.head.next;for(let s=e;s;s=e){let i;for(e=s.next,i=s.previous;i;i=i.previous)if(t(s,i)>=0){s!==i.next&&(this.tail===s&&(this.tail=s.previous),s.previous.next=s.next,s.next&&(s.next.previous=s.previous),s.next=i.next,s.previous=i,s.next.previous=s,i.next=s);break}i||(this.tail===s&&(this.tail=s.previous),s.previous.next=s.next,s.next&&(s.next.previous=s.previous),s.next=this.head,this.head.previous=s,s.previous=null,this.head=s)}}mergeSort(t){if(this.head===this.tail)return;const e=[];let s,i=this.head;for(;i;){for(s=i;s.next&&t(s,s.next)<=0;)s=s.next;const n=s.next;i.previous=s.next=null,e[e.length]=i,i=n}for(;e.length>1;)e.push(this.merge(e.shift(),e.shift(),t));for(this.tail=this.head=e[0];this.tail.next;)this.tail=this.tail.next}merge(t,e,s){let i,n;for(s(t,e)<=0?(n=i=t,t=t.next):(n=i=e,e=e.next);t&&e;)s(t,e)<=0?(i.next=t,t.previous=i,i=t,t=t.next):(i.next=e,e.previous=i,i=e,e=e.next);return t?(i.next=t,t.previous=i):(i.next=e,e.previous=i),n}}class a{constructor(t,e){this.tail=null,this.cacheTail=null,this.nodeClass=t,this.components=e}get(){if(this.tail){const t=this.tail;return this.tail=this.tail.previous,t.previous=null,t}return new this.nodeClass}dispose(t){for(const e of this.components.values())t[e]=null;t.entity=null,t.next=null,t.previous=this.tail,this.tail=t}cache(t){t.previous=this.cacheTail,this.cacheTail=t}releaseCache(){for(;this.cacheTail;){const t=this.cacheTail;this.cacheTail=t.previous,this.dispose(t)}}}const d="__ash_types__";class l{constructor(t,e){this.releaseNodePoolCache=(()=>{this.engine.updateComplete.remove(this.releaseNodePoolCache),this.nodePool.releaseCache()}),this.nodeClass=t,this.engine=e,this.init()}init(){this.nodes=new r,this.entities=new Map,this.components=new Map,this.nodePool=new a(this.nodeClass,this.components);const t=this.nodePool.get();this.nodePool.dispose(t);const e=t.constructor[d];for(const[t,s]of e)this.components.set(s,t)}get nodeList(){return this.nodes}newEntity(t){this.addIfMatch(t)}componentAddedToEntity(t,e){this.addIfMatch(t)}componentRemovedFromEntity(t,e){this.components.has(e)&&this.removeIfMatch(t)}removeEntity(t){this.removeIfMatch(t)}addIfMatch(t){if(!this.entities.has(t)){for(const e of this.components.keys())if(!t.has(e))return;const e=this.nodePool.get();e.entity=t;for(const s of this.components.keys())e[this.components.get(s)]=t.get(s);this.entities.set(t,e),this.nodes.add(e)}}removeIfMatch(t){if(this.entities.has(t)){const e=this.entities.get(t);this.entities.delete(t),this.nodes.remove(e),this.engine.updating?(this.nodePool.cache(e),this.engine.updateComplete.add(this.releaseNodePoolCache)):this.nodePool.dispose(e)}}cleanUp(){for(let t=this.nodes.head;t;t=t.next)this.entities.delete(t.entity);this.nodes.removeAll()}}class c{constructor(){this.head=null,this.tail=null}add(t){this.head?(this.tail.next=t,t.previous=this.tail,t.next=null,this.tail=t):(this.head=this.tail=t,t.next=t.previous=null)}remove(t){this.head===t&&(this.head=this.head.next),this.tail===t&&(this.tail=this.tail.previous),t.previous&&(t.previous.next=t.next),t.next&&(t.next.previous=t.previous)}removeAll(){for(;this.head;){const t=this.head;this.head=this.head.next,t.previous=null,t.next=null}this.tail=null}}class u{constructor(){this.head=null,this.tail=null}add(t){if(this.head){let e;for(e=this.tail;e&&!(e.priority<=t.priority);e=e.previous);e===this.tail?(this.tail.next=t,t.previous=this.tail,t.next=null,this.tail=t):e?(t.next=e.next,t.previous=e,e.next.previous=t,e.next=t):(t.next=this.head,t.previous=null,this.head.previous=t,this.head=t)}else this.head=this.tail=t,t.next=t.previous=null}remove(t){this.head===t&&(this.head=this.head.next),this.tail===t&&(this.tail=this.tail.previous),t.previous&&(t.previous.next=t.next),t.next&&(t.next.previous=t.previous)}removeAll(){for(;this.head;){const t=this.head;this.head=this.head.next,t.previous=null,t.next=null}this.tail=null}get(t){for(let e=this.head;e;e=e.next)if(e instanceof t)return e;return null}}class p{constructor(t=""){this.previous=null,this.next=null,this.componentAdded=new h,this.componentRemoved=new h,this.nameChanged=new h,this.components=new Map,t?this.pName=t:(p.nameCount+=1,this.pName="_entity"+p.nameCount)}get name(){return this.pName}set name(t){if(this.pName!==t){const e=this.pName;this.pName=t,this.nameChanged.dispatch(this,e)}}add(t,e=null){return e||(e=t.constructor.prototype.constructor),e=e,this.components.has(e)&&this.remove(e),this.components.set(e,t),this.componentAdded.dispatch(this,e),this}remove(t){const e=this.components.get(t);return e?(this.components.delete(t),this.componentRemoved.dispatch(this,t),e):null}get(t){return this.components.get(t)}getAll(){const t=[];for(const e of this.components.values())t[t.length]=e;return t}has(t){return this.components.has(t)}}p.nameCount=0;class m{constructor(){this.previous=null,this.next=null,this.priority=0}}class v{constructor(t){this.instance=t}getComponent(){return this.instance}get identifier(){return this.instance}}class y{constructor(t){this.componentType=t}getComponent(){return this.instance||(this.instance=new this.componentType),this.instance}get identifier(){return this.getComponent()}}class f{constructor(t){this.componentType=t}getComponent(){return new this.componentType}get identifier(){return this.componentType}}class g{constructor(t){this.closure=t}getComponent(){return this.closure()}get identifier(){return this.closure}}class x{constructor(t,e){this.creatingState=t,this.componentType=e,this.withType(e)}withInstance(t){return this.setProvider(new v(t)),this}withType(t){return this.setProvider(new f(t)),this}withSingleton(t){return t||(t=this.componentType),this.setProvider(new y(t)),this}withMethod(t){return this.setProvider(new g(t)),this}withProvider(t){return this.setProvider(t),this}add(t){return this.creatingState.add(t)}setProvider(t){this.provider=t,this.creatingState.providers.set(this.componentType,t)}}class w{constructor(){this.providers=new Map}add(t){return new x(this,t)}get(t){return this.providers.get(t)||null}has(t){return this.providers.has(t)}}class A{constructor(t){this.systemPriority=0,this.method=t}getSystem(){return this.method()}get identifier(){return this.method}get priority(){return this.systemPriority}set priority(t){this.systemPriority=t}}class T{constructor(t,e){this.creatingState=t,this.provider=e}withPriority(t){return this.provider.priority=t,this}addInstance(t){return this.creatingState.addInstance(t)}addSingleton(t){return this.creatingState.addSingleton(t)}addMethod(t){return this.creatingState.addMethod(t)}addProvider(t){return this.creatingState.addProvider(t)}}class P{constructor(t){this.systemPriority=0,this.instance=t}getSystem(){return this.instance}get identifier(){return this.instance}get priority(){return this.systemPriority}set priority(t){this.systemPriority=t}}class S{constructor(t){this.systemPriority=0,this.componentType=t}getSystem(){return this.instance||(this.instance=new this.componentType),this.instance}get identifier(){return this.getSystem()}get priority(){return this.systemPriority}set priority(t){this.systemPriority=t}}class N{constructor(){this.providers=[]}addInstance(t){return this.addProvider(new P(t))}addSingleton(t){return this.addProvider(new S(t))}addMethod(t){return this.addProvider(new A(t))}addProvider(t){const e=new T(this,t);return this.providers[this.providers.length]=t,e}}class L{static getPool(t){if(L.pools.has(t))return L.pools.get(t);const e=[];return L.pools.set(t,e),e}static get(t){const e=L.getPool(t);return e.length>0?e.pop():new t}static dispose(t){if(t){const e=t.constructor.prototype.constructor,s=L.getPool(e);s[s.length]=t}}static empty(){L.pools=new Map}}L.pools=new Map;t.Signal0=n,t.Signal1=o,t.Signal2=h,t.Signal3=class extends i{dispatch(t,e,s){let i;for(this.startDispatch(),i=this.head;i;i=i.next)i.listener.call(i,t,e,s),i.once&&this.remove(i.listener);this.endDispatch()}},t.ComponentMatchingFamily=l,t.keep=function(t){return(e,s)=>{const i=e.constructor;let n;i.hasOwnProperty(d)?n=i[d]:(n=new Map,Object.defineProperty(i,d,{enumerable:!0,get:()=>n})),n.set(s,t)}},t.Engine=class{constructor(){this.updating=!1,this.familyClass=l,this.entityNameChanged=((t,e)=>{this.entityNames.get(e)===t&&(this.entityNames.delete(e),this.entityNames.set(t.name,t))}),this.componentAdded=((t,e)=>{for(const s of this.families.values())s.componentAddedToEntity(t,e)}),this.componentRemoved=((t,e)=>{for(const s of this.families.values())s.componentRemovedFromEntity(t,e)}),this.entityList=new c,this.entityNames=new Map,this.systemList=new u,this.families=new Map,this.updateComplete=new n}addEntity(t){if(this.entityNames.has(t.name))throw new Error("The entity name "+t.name+" is already in use by another entity.");this.entityList.add(t),this.entityNames.set(t.name,t),t.componentAdded.add(this.componentAdded),t.componentRemoved.add(this.componentRemoved),t.nameChanged.add(this.entityNameChanged);for(const e of this.families.values())e.newEntity(t)}removeEntity(t){t.componentAdded.remove(this.componentAdded),t.componentRemoved.remove(this.componentRemoved),t.nameChanged.remove(this.entityNameChanged);for(const e of this.families.values())e.removeEntity(t);this.entityNames.delete(t.name),this.entityList.remove(t)}getEntityByName(t){return this.entityNames.get(t)||null}removeAllEntities(){for(;this.entityList.head;)this.removeEntity(this.entityList.head)}get entities(){const t=[];for(let e=this.entityList.head;e;e=e.next)t[t.length]=e;return t}getNodeList(t){if(this.families.has(t))return this.families.get(t).nodeList;const e=new this.familyClass(t,this);this.families.set(t,e);for(let t=this.entityList.head;t;t=t.next)e.newEntity(t);return e.nodeList}releaseNodeList(t){this.families.has(t)&&this.families.get(t).cleanUp(),this.families.delete(t)}addSystem(t,e){t.priority=e,t.addToEngine(this),this.systemList.add(t)}getSystem(t){return this.systemList.get(t)}get systems(){const t=[];for(let e=this.systemList.head;e;e=e.next)t[t.length]=e;return t}removeSystem(t){this.systemList.remove(t),t.removeFromEngine(this)}removeAllSystems(){for(;this.systemList.head;){const t=this.systemList.head;this.systemList.head=this.systemList.head.next,t.previous=null,t.next=null,t.removeFromEngine(this)}this.systemList.tail=null}update(t){this.updating=!0;for(let e=this.systemList.head;e;e=e.next)e.update(t);this.updating=!1,this.updateComplete.dispatch()}},t.Entity=p,t.Node=class{constructor(){this.entity=null,this.previous=null,this.next=null}},t.NodeList=r,t.NodePool=a,t.System=m,t.EntityStateMachine=class{constructor(t){this.entity=t,this.states={}}addState(t,e){return this.states[t]=e,this}createState(t){const e=new w;return this.states[t]=e,e}changeState(t){let e,s=this.states[t];if(!s)throw new Error(`Entity state ${t} doesn't exist`);if(s!==this.currentState){if(this.currentState){e=new Map;for(const t of s.providers.keys())e.set(t,s.providers.get(t));for(const t of this.currentState.providers.keys()){const s=e.get(t)||null;s&&s.identifier===this.currentState.providers.get(t).identifier?e.delete(t):this.entity.remove(t)}}else e=s.providers;for(const t of e.keys())this.entity.add(e.get(t).getComponent(),t);this.currentState=s}else s=null}},t.EngineStateMachine=class{constructor(t){this.engine=t,this.states={}}addState(t,e){return this.states[t]=e,this}createState(t){const e=new N;return this.states[t]=e,e}changeState(t){let e=this.states[t];if(!e)throw new Error(`Engine state ${t} doesn't exist`);if(e===this.currentState)return void(e=null);const s=[];let i;for(const t of e.providers)s[i=t.identifier]=t;if(this.currentState)for(const t of this.currentState.providers)s[i=t.identifier]?delete s[i]:this.engine.removeSystem(t.getSystem());for(const t of s)this.engine.addSystem(t.getSystem(),t.priority);this.currentState=e}},t.RAFTickProvider=class extends o{constructor(){super(...arguments),this.rafId=0,this.previousTime=0,this.update=(()=>{this.rafId=window.requestAnimationFrame(this.update);const t=Date.now();this.dispatch((t-this.previousTime)/1e3),this.previousTime=t})}start(){this.previousTime=Date.now(),this.rafId=window.requestAnimationFrame(this.update)}stop(){window.cancelAnimationFrame(this.rafId),this.rafId=0}get playing(){return!!this.rafId}},t.IntervalTickProvider=class extends o{constructor(t){super(),this.intervalId=0,this.previousTime=0,this.pInterval=33,this.update=(()=>{const t=Date.now();this.dispatch((t-this.previousTime)/1e3),this.previousTime=t}),t&&(this.pInterval=t)}start(){this.previousTime=Date.now(),this.intervalId=window.setInterval(this.update,this.pInterval)}stop(){window.clearInterval(this.intervalId),this.intervalId=0}set interval(t){this.pInterval=t,0!==this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=window.setInterval(this.update,t))}get inteval(){return this.pInterval}get playing(){return!!this.intervalId}},t.ComponentPool=L,t.ListIteratingSystem=class extends m{constructor(t){super(),this.nodeList=null,this.nodeClass=t}addToEngine(t){if(this.nodeList=t.getNodeList(this.nodeClass),this.nodeAdded){for(let t=this.nodeList.head;t;t=t.next)this.nodeAdded(t);this.nodeList.nodeAdded.add(this.nodeAdded)}this.nodeRemoved&&this.nodeList.nodeRemoved.add(this.nodeRemoved)}removeFromEngine(t){this.nodeAdded&&this.nodeList.nodeAdded.remove(this.nodeAdded),this.nodeRemoved&&this.nodeList.nodeRemoved.remove(this.nodeRemoved),this.nodeList=null}update(t){for(let e=this.nodeList.head;e;e=e.next)this.updateNode(e,t)}},Object.defineProperty(t,"__esModule",{value:!0})});

},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
const GameUI_1 = require("./script/GameUI");
const GameControl_1 = require("./script/GameControl");
const Bullet_1 = require("./script/Bullet");
const DropBox_1 = require("./script/DropBox");
/*
* 游戏初始化配置;
*/
class GameConfig {
    constructor() { }
    static init() {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
        reg("script/GameControl.ts", GameControl_1.default);
        reg("script/Bullet.ts", Bullet_1.default);
        reg("script/DropBox.ts", DropBox_1.default);
    }
}
GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.startScene = "test/TestScene.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;
exports.default = GameConfig;
GameConfig.init();
},{"./script/Bullet":8,"./script/DropBox":9,"./script/GameControl":10,"./script/GameUI":11}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GameConfig_1 = require("./GameConfig");
const ash_ts_1 = require("ash.ts");
const MoveSystem_1 = require("./ces/systems/MoveSystem");
const PositionComponent_1 = require("./ces/components/PositionComponent");
const SpeedComponent_1 = require("./ces/components/SpeedComponent");
class Main {
    constructor() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        //Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
        this.init();
    }
    onVersionLoaded() {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    }
    onConfigLoaded() {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    }
    init() {
        this._engine = new ash_ts_1.Engine();
        this._engine.addSystem(new MoveSystem_1.MoveSystem(), 0);
        Laya.timer.loop(1000, this, this.update);
    }
    update() {
        this._engine.update(Laya.timer.delta);
    }
    setup() {
        let entity = new ash_ts_1.Entity();
        let position = ash_ts_1.ComponentPool.get(PositionComponent_1.PositionComponent);
        position.initialize(2, 3, 4);
        entity.add(position);
        let speed = ash_ts_1.ComponentPool.get(SpeedComponent_1.SpeedComponent);
        speed.initialize(10, 2, 1);
        entity.add(speed);
        this._engine.addEntity(entity);
    }
}
//激活启动类
new Main().setup();
},{"./GameConfig":2,"./ces/components/PositionComponent":4,"./ces/components/SpeedComponent":5,"./ces/systems/MoveSystem":7,"ash.ts":1}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PositionComponent {
    constructor() {
    }
    initialize(x = 0.0, y = 0.0, z = 0.0) {
        this.posX = x;
        this.posY = y;
        this.posZ = z;
    }
}
exports.PositionComponent = PositionComponent;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SpeedComponent {
    constructor() {
    }
    initialize(x = 0.0, y = 0.0, z = 0.0) {
        this.speedX = x;
        this.speedY = y;
        this.speedZ = z;
    }
}
exports.SpeedComponent = SpeedComponent;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ash_ts_1 = require("ash.ts");
const PositionComponent_1 = require("../components/PositionComponent");
const SpeedComponent_1 = require("../components/SpeedComponent");
class MoveNode extends ash_ts_1.Node {
}
__decorate([
    ash_ts_1.keep(PositionComponent_1.PositionComponent),
    __metadata("design:type", PositionComponent_1.PositionComponent)
], MoveNode.prototype, "pos", void 0);
__decorate([
    ash_ts_1.keep(SpeedComponent_1.SpeedComponent),
    __metadata("design:type", SpeedComponent_1.SpeedComponent)
], MoveNode.prototype, "speed", void 0);
exports.MoveNode = MoveNode;
},{"../components/PositionComponent":4,"../components/SpeedComponent":5,"ash.ts":1}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ash_ts_1 = require("ash.ts");
const MoveNode_1 = require("../nodes/MoveNode");
class MoveSystem extends ash_ts_1.ListIteratingSystem {
    constructor() {
        super(MoveNode_1.MoveNode);
    }
    updateNode(node, delta) {
        node.pos.posX += node.speed.speedX;
        console.log("x: " + node.pos.posX);
    }
}
exports.MoveSystem = MoveSystem;
},{"../nodes/MoveNode":6,"ash.ts":1}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 子弹脚本，实现子弹飞行逻辑及对象池回收机制
 */
class Bullet extends Laya.Script {
    constructor() { super(); }
    onEnable() {
        //设置初始速度
        var rig = this.owner.getComponent(Laya.RigidBody);
        rig.setVelocity({ x: 0, y: -10 });
    }
    onTriggerEnter(other, self, contact) {
        //如果被碰到，则移除子弹
        this.owner.removeSelf();
    }
    onUpdate() {
        //如果子弹超出屏幕，则移除子弹
        if (this.owner.y < -10) {
            this.owner.removeSelf();
        }
    }
    onDisable() {
        //子弹被移除时，回收子弹到对象池，方便下次复用，减少对象创建开销
        Laya.Pool.recover("bullet", this.owner);
    }
}
exports.default = Bullet;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GameUI_1 = require("./GameUI");
/**
 * 掉落盒子脚本，实现盒子碰撞及回收流程
 */
class DropBox extends Laya.Script {
    constructor() {
        super();
        /**盒子等级 */
        this.level = 1;
    }
    onEnable() {
        /**获得组件引用，避免每次获取组件带来不必要的查询开销 */
        this._rig = this.owner.getComponent(Laya.RigidBody);
        this.level = Math.round(Math.random() * 5) + 1;
        this._text = this.owner.getChildByName("levelTxt");
        this._text.text = this.level + "";
    }
    onUpdate() {
        //让持续盒子旋转
        this.owner.rotation++;
    }
    onTriggerEnter(other, self, contact) {
        var owner = this.owner;
        if (other.label === "buttle") {
            //碰撞到子弹后，增加积分，播放声音特效
            if (this.level > 1) {
                this.level--;
                this._text.changeText(this.level + "");
                owner.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: -10 });
                Laya.SoundManager.playSound("sound/hit.wav");
            }
            else {
                if (owner.parent) {
                    let effect = Laya.Pool.getItemByCreateFun("effect", this.createEffect, this);
                    effect.pos(owner.x, owner.y);
                    owner.parent.addChild(effect);
                    effect.play(0, true);
                    owner.removeSelf();
                    Laya.SoundManager.playSound("sound/destroy.wav");
                }
            }
            GameUI_1.default.instance.addScore(1);
        }
        else if (other.label === "ground") {
            //只要有一个盒子碰到地板，则停止游戏
            owner.removeSelf();
            GameUI_1.default.instance.stopGame();
        }
    }
    /**使用对象池创建爆炸动画 */
    createEffect() {
        let ani = new Laya.Animation();
        ani.loadAnimation("test/TestAni.ani");
        ani.on(Laya.Event.COMPLETE, null, recover);
        function recover() {
            ani.removeSelf();
            Laya.Pool.recover("effect", ani);
        }
        return ani;
    }
    onDisable() {
        //盒子被移除时，回收盒子到对象池，方便下次复用，减少对象创建开销。
        Laya.Pool.recover("dropBox", this.owner);
    }
}
exports.default = DropBox;
},{"./GameUI":11}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
class GameControl extends Laya.Script {
    constructor() {
        super();
        /** @prop {name:createBoxInterval,tips:"间隔多少毫秒创建一个下跌的容器",type:int,default:1000}*/
        this.createBoxInterval = 1000;
        /**开始时间*/
        this._time = 0;
        /**是否已经开始游戏 */
        this._started = false;
    }
    onEnable() {
        this._time = Date.now();
        this._gameBox = this.owner.getChildByName("gameBox");
        this.createBox();
    }
    onUpdate() {
        //每间隔一段时间创建一个盒子
        let now = Date.now();
        if (now - this._time > this.createBoxInterval) {
            this._time = now;
            this.createBox();
        }
    }
    createBox() {
        //使用对象池创建盒子
        let box = Laya.Pool.getItemByCreateFun("dropBox", this.dropBox.create, this.dropBox);
        box.pos(Math.random() * (Laya.stage.width - 100), -100);
        this._gameBox.addChild(box);
    }
    onStageClick(e) {
        //停止事件冒泡，提高性能，当然也可以不要
        e.stopPropagation();
        //舞台被点击后，使用对象池创建子弹
        let flyer = Laya.Pool.getItemByCreateFun("bullet", this.bullet.create, this.bullet);
        flyer.pos(Laya.stage.mouseX, Laya.stage.mouseY);
        this._gameBox.addChild(flyer);
    }
    /**开始游戏，通过激活本脚本方式开始游戏*/
    startGame() {
        if (!this._started) {
            this._started = true;
            this.enabled = true;
        }
    }
    /**结束游戏，通过非激活本脚本停止游戏 */
    stopGame() {
        this._started = false;
        this.enabled = false;
        this.createBoxInterval = 1000;
        this._gameBox.removeChildren();
    }
}
exports.default = GameControl;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("./../ui/layaMaxUI");
const GameControl_1 = require("./GameControl");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
class GameUI extends layaMaxUI_1.ui.test.TestSceneUI {
    constructor() {
        super();
        GameUI.instance = this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
    }
    onEnable() {
        this._control = this.getComponent(GameControl_1.default);
        //点击提示文字，开始游戏
        this.tipLbll.on(Laya.Event.CLICK, this, this.onTipClick);
    }
    onTipClick(e) {
        this.tipLbll.visible = false;
        this._score = 0;
        this.scoreLbl.text = "";
        this._control.startGame();
    }
    /**增加分数 */
    addScore(value = 1) {
        this._score += value;
        this.scoreLbl.changeText("分数：" + this._score);
        //随着分数越高，难度增大
        if (this._control.createBoxInterval > 600 && this._score % 20 == 0)
            this._control.createBoxInterval -= 20;
    }
    /**停止游戏 */
    stopGame() {
        this.tipLbll.visible = true;
        this.tipLbll.text = "游戏结束了，点击屏幕重新开始";
        this._control.stopGame();
    }
}
exports.default = GameUI;
},{"./../ui/layaMaxUI":12,"./GameControl":10}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var ui;
(function (ui) {
    var test;
    (function (test) {
        class TestSceneUI extends Scene {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.loadScene("test/TestScene");
            }
        }
        test.TestSceneUI = TestSceneUI;
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
